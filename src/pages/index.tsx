import About from "@/components/About";
import Hero from "@/components/Hero";
import Head from "next/head";
import Project from "@/components/Project";
import Contact from "@/components/Contact";
import { AiOutlineDownload } from "react-icons/ai";
import { useScroll, useSpring, motion } from "framer-motion";
import { useRef } from "react";
export default function Home() {
  const pageRef = useRef<HTMLDivElement>(null);
  const { scrollYProgress } = useScroll({ target: pageRef });
  const scaleX = useSpring(scrollYProgress, {
    stiffness: 100,
    damping: 30,
    restDelta: 0.001,
  });
  const contactRef = useRef<HTMLDivElement>(null);
  const aboutRef = useRef<HTMLDivElement>(null);
  const projectRef = useRef<HTMLDivElement>(null);

  const handleClick = (
    ref: React.RefObject<HTMLDivElement>,
    sectionName: string
  ) => {
    if (ref.current) {
      if (sectionName === "project") {
        console.log(ref.current?.offsetTop);
        window.scrollTo({
          top: 784 - 64,
          behavior: "smooth",
        });
      } else {
        ref.current.scrollIntoView({
          behavior: "smooth",
        });
      }
    }
  };
  return (
    <>
      <Head>
        <title>Justin Lien</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div
        className="min-h-screen w-screen px-4 sm:px-16 lg:px-28 2xl:px-[18%] overflow-x-hidden"
        ref={pageRef}
      >
        <div className="navbar bg-black fixed top-0 left-0 z-50 px-4 sm:px-16 lg:px-28 2xl:px-[18%]">
          <div className="flex-1 text-secondary">
            <a
              className="btn btn-ghost normal-case text-3xl p-0"
              onClick={() => {
                // scrollToTop
                window.scrollTo({
                  top: 0,
                  behavior: "smooth",
                });
              }}
            >
              J<span className="text-primary">L</span>
            </a>
          </div>
          <div className="flex-none">
            <button className="btn btn-secondary btn-outline gap-2">
              Resume
              <AiOutlineDownload className="w-6 h-6" />
            </button>
          </div>
        </div>
        <motion.div
          style={{ scaleX }}
          className="fixed h-1 left-0 right-0 bottom-10 bg-primary z-50"
        />
        <Hero />
        {/* Project section */}
        <Project scrollRef={projectRef} />
        <About scrollRef={aboutRef} />
        {/* Contact section */}
        {/* <Contact /> */}
      </div>

      {/* <div className="drawer drawer-end">
        <input id="my-drawer-3" type="checkbox" className="drawer-toggle" />
        <div className="drawer-content flex flex-col overflow-x-hidden">
          <div className="flex-none hidden lg:block">
            <ul className="menu menu-horizontal">
              
              <li
                onClick={() => {
                  handleClick(projectRef, "project");
                }}
              >
                <a className="rounded">Project</a>
              </li>
              <li
                onClick={() => {
                  handleClick(contactRef, "contact");
                }}
              >
                <a className="rounded">Contact</a>
              </li>
              <li
                onClick={() => {
                  handleClick(aboutRef, "about");
                }}
              >
                <a className="rounded">About</a>
              </li>
              <li>
                <button className="rounded text-secondary">
                  Resume
                  <AiOutlineDownload className="w-full h-full" />
                </button>
              </li>
            </ul>
          </div>
        </div>
      </div>
      <div className="drawer-side">
        <label htmlFor="my-drawer-3" className="drawer-overlay"></label>
        <ul className="menu p-4 w-80 bg-[#171717]">
          <li
            onClick={() => {
              handleClick(projectRef, "project");
            }}
          >
            <a className="rounded">Project</a>
          </li>
          <li
            onClick={() => {
              handleClick(contactRef, "contact");
            }}
          >
            <a className="rounded">Contact</a>
          </li>
          <li
            onClick={() => {
              handleClick(aboutRef, "about");
            }}
          >
            <a className="rounded">About</a>
          </li>
          <li>
            <a className="rounded text-secondary">
              <AiOutlineDownload />
              Resume
            </a>
          </li>
        </ul>
      </div> */}
    </>
  );
}
